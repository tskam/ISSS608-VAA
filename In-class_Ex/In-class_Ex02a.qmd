---
title: "In-class Exercise 2"
author: Dr. Kam Tin Seong
date: "April 17, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

::: callout-note
## DIY

To getting started, you the step you learned in previous lesson, load tidyverse, ggdist and ggthemes R packages into RStudio environment.
:::

```{r}
pacman::p_load(tidyverse, ggdist, ggthemes)
```

Before we move on to the next step, it is always a good practice to visit

```{r}
exam_df <- read_csv("data/Exam_data.csv")
```

```{r}
ggplot(data=exam_df, 
       aes(x = ENGLISH)) +
  geom_histogram(color = "black",
                 fill = "light blue")       
```

```{r}
ggplot(exam_df, 
       aes(x = ENGLISH)) +
  geom_density(
    color = "#1696d2",
    adjust = .65,
    alpha = .6
  )

```

```{r}
#| fig-width: 10
#| fig-height: 6

median_eng <- median(exam_df$ENGLISH)
mean_eng <- mean(exam_df$ENGLISH)
std_eng <- sd(exam_df$ENGLISH)

ggplot(exam_df, 
       aes(x = ENGLISH)) +
  geom_density(
    color = "#1696d2",
    adjust = .65,
    alpha = .6) +
  stat_function(
    fun = dnorm,
    args = list(mean = mean_eng,
                sd = std_eng),
    col = "grey30",
    size = .8) +
  geom_vline(
    aes(xintercept = mean_eng),
    colour="#4d5887", 
    linewidth = .6, 
    linetype = "dashed") +
  annotate(geom = "text", 
           x = mean_eng - 8, 
           y = 0.04,
           label = paste0("Mean ENGLISH: ",
                          round((mean_eng), 2)),
           color = "#4d5887") +
  geom_vline(
    aes(xintercept = median_eng),
    colour = "#00AFBB", 
    linewidth = .6, 
    linetype = "dashed") +
  annotate(geom = "text", 
           x = median_eng + 8, 
           y = 0.04,
           label = paste0("Median ENGLISH: ", 
                   round((median_eng),2)),
    color = "#00AFBB") +
  labs(
    title = "Uneven Distribution of ENGLISH Score across Participants",
    subtitle = "Median ENGLISH score is close to Mean score, but distribution density reveals multiple peaks and troughs",
    x = "ENGLISH Score") +
  theme(
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    panel.grid.major = element_blank(),
    plot.background = element_rect(
      fill="#F8F3E6",
      colour="#F8F3E6")
  )
```

## Visualising Distribution

```{r}
ggplot(data = exam_df,
       aes(y = ENGLISH,
           x = RACE)) +
  geom_boxplot()
```

```{r}
## function to return median and labels
n_fun <- function(x){
  return(data.frame(y = median(x) + 2.5, 
                    label = paste0("n = ",length(x))))
}

ggplot(data = exam_df,
       aes(y = ENGLISH,
           x = RACE)) +
  geom_boxplot() +
  stat_summary(
    geom = "text",
    fun.data = n_fun,
    size = 3.5)
```

```{r}
ggplot(data = exam_df,
       aes(y = ENGLISH,
           x = RACE)) +
  geom_boxplot(fill = "light blue", 
               varwidth = TRUE)

```

### Plotting a Half Eye graph

First, we will plot a Half-Eye graph by using [`stat_halfeye()`](https://mjskay.github.io/ggdist/reference/stat_halfeye.html) of **ggdist** package.

This produces a Half Eye visualization, which is contains a half-density and a slab-interval.

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA)
```

## The code chunk

```{r}
#| eval: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA)
```

::: callout-tip
## Things to learn from the code chunk above

We remove the slab interval by setting .width = 0 and point_colour = NA.
:::
:::

### Adding the boxplot with `geom_boxplot()`

Next, we will add the second geometry layer using [`geom_boxplot()`]() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.

::: panel-tabset
## The plot

```{r}
#| eval: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA)
```

## The code chunk

```{r}
#| echo: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA)
```
:::

### Adding the Dot Plots with `stat_dots()`

Next, we will add the third geometry layer using [`stat_dots()`](https://mjskay.github.io/ggdist/reference/stat_dots.html) of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = "left" to indicate we want it on the left-hand side.

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 2)
```

## The code chunk

```{r}
#| eval: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 2)
```
:::

### Finishing touch

Lastly, [`coord_flip()`](https://ggplot2.tidyverse.org/reference/coord_flip.html) of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, `theme_economist()` of ggthemes package is used to give the raincloud chart a professional publishing standard look.

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 1.5) +
  coord_flip() +
  theme_economist()
```

## The code chunk

```{r}
#| eval: false
ggplot(exam_df, 
       aes(x = RACE, 
           y = ENGLISH)) +
  stat_halfeye(adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA) +
  geom_boxplot(width = .20,
               outlier.shape = NA) +
  stat_dots(side = "left", 
            justification = 1.2, 
            binwidth = .5,
            dotsize = 1.5) +
  coord_flip() +
  theme_economist()
```
:::

```{r}
ggplot(data = exam_df,
       aes(x = ENGLISH,
           y = MATHS)) + 
  geom_point()
```
